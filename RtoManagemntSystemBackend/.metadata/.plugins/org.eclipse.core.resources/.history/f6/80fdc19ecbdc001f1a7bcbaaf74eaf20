package com.rto.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.rto.dto.ApiResponse;
import com.rto.dto.AuthRequest;
import com.rto.dto.RegDTO;
import com.rto.pojos.Registeration;
import com.rto.service.Category;
import com.rto.service.PathVariable;
import com.rto.service.SignInService;

@RestController
@RequestMapping("/users")
public class UserController {
	//depcy
	@Autowired
	private SignInService userService;
	//depcy
	
	
	/*
	 * Desc - user sign in
	 * URL - http://host:port/users/signin
	 * Method - POST (for security)
	 * payload -  DTO (email , pwd)
	 * success resp - user details - dto
	 * err resp  - api resp - err mesg
	 * 
	 */
	@PostMapping("/signin")
	public ResponseEntity<?> userSignIn(@RequestBody AuthRequest dto)
	{
		System.out.println("in user sign in "+dto);
		try {
			return ResponseEntity.ok(userService.signIn(dto));
		} catch (RuntimeException e) {
			//SC 401 , err mesg
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED)
					.body(new ApiResponse(e.getMessage()));
		}
	}
	
	@PutMapping("/{userId}")
	public ResponseEntity<?> updateUserDetails
	(@PathVariable Long userId, @RequestBody Registeration user) {
		System.out.println("in update user " + userId + " " + user);

		// invoke service layer method
		//TO DO - change Sts code - in case of error !!!
		return ResponseEntity.ok(
				userService.updateUser(userId, user));

	}
	
}
